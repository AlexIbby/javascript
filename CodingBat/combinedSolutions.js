{"noTriples-code":"function noTriples(nums){\n  \n  if (nums.length < 3){\n  return true\n  }\n  \n  for (let i = 0; i < nums.length; i++){\n    \n    x1 = nums[i]\n    x2 = nums[i+1]\n    x3 = nums[i+2]\n    \n    if ((x1 === x2) && (x2 === x3)){\n    return false\n    }\n  }\n  \n  return true\n \n}","intMax":"true","startHi":"true","redTicket":"true","sameStarChar":"true","greenTicket-code":"function greenTicket(a, b, c){\n  \n  let allNumbers = new Set([a,b,c])\n  \n  if (allNumbers.size === 3){\n      return 0\n      \n    }else if (allNumbers.size === 1){\n      \n        return 20\n        \n      }else{\n          return 10\n        }\n  \n}","sameEnds":"true","backAround-code":"function backAround(str){\n  return str.slice(-1) + str + str.slice(-1)\n  \n}","extraFront-code":"function extraFront(str){\n  \n  if (str.length <= 2){\n  \n    return str + str + str\n  \n  }\n  \n  let x = str.slice(0,2)\n  \n  return x + x + x\n    \n}","oneTwo":"true","mirrorEnds-code":"function mirrorEnds(string){\n  \n  let mirrorEnd = \"\"\n  \n  for (let i = 1; i < string.length + 1; i++){\n    \n    let front = string.slice(0,i)\n    \n    let back = string.slice(i * -1)\n    back = back.split(\"\").reverse().join(\"\")\n    \n    if (front === back){\n      \n      mirrorEnd = front \n      }\n    \n  }\n  \n  return mirrorEnd\n  \n  \n}","nonStart-code":"function nonStart(a, b){\n  return a.slice(1) + b.slice(1)\n}","endOther-code":"function endOther(a, b){\n  a = a.toLowerCase()\n  b = b.toLowerCase()\n  \n  let aslice = a.length * -1\n  let bslice = b.length * -1\n  \n  let checka = a.slice(bslice)\n  let checkb = b.slice(aslice)\n  \n  if (checka === b){\n    return true \n  }\n  \n  if (checkb === a){\n    return true \n  }\n  \n  \n  return false \n  \n}","withoutEnd2":"true","arrayCount9":"true","loneTeen":"true","makeAbba":"true","specialEleven":"true","fizzString2-code":"function fizzString2(n){\n  \n  if ((n % 3 === 0) && (n % 5 === 0)){\n  \n    return \"FizzBuzz!\"\n    \n  }else if ((n % 3 === 0) && (n % 5 != 0)){\n  \n    return \"Fizz!\"\n    \n  }else if ((n % 3 != 0) && (n % 5 === 0)){\n  \n    return \"Buzz!\"\n    \n  }else{\n  \n    let x = n.toString()\n    \n    return x +\"!\"\n  }\n\n  \n}","countHi":"true","caughtSpeeding":"true","posNeg-code":"function posNeg(a, b, negative){\n  if ( a > 0 && b < 0 && negative === false){\n    return true \n    \n  }else if ( a < 0 && b > 0 && negative === false){\n    return true \n    \n  }else if (negative === true && b < 0 && a < 0){\n    return true \n    \n  }else {\n    return false \n  }\n  \n}\n","delDel-code":"function delDel(str){\n  if (str.slice(1,4) === \"del\"){\n    return str[0] + str.slice(4)\n  \n  }else{\n    return str\n  }\n}","bobThere":"true","starOut":"true","countTriple":"true","right2":"true","without2-code":"function without2(str){\n  \n  \n  if (str.length === 2){\n\n    return \"\"\n  \n  }\n  \n  let x = str.slice(0,2)\n  let y = str.slice(-2)\n  \n  if ((x === y) && (str.length > 2)) {\n  \n  return str.slice(2)\n  }\n  \n  return str\n  \n  \n}","zipZap-code":"function zipZap(str){\n  \n  if (str.length <= 2){\n  \n     return str\n  }\n  \n  if (str.includes(\"z\") === false){\n  \n    return str\n  }\n  \n  if (str.includes(\"p\") === false){\n  \n    return str\n  }\n  \n  const regex = /z[a-z]p/g\n  \n  str = str.replace(regex, \"zp\")\n\n  \n  \n  \n  \n  return str\n  \n  \n  \n}","notString":"true","monkeyTrouble":"true","deFront-code":"function deFront(str){\n  \n  // str === ab\n  if (str === \"ab\"){\n     return str\n  }\n \n  // no a/b str length 2\n  \n  if (str.length === 2){\n  \n    if ((str.slice(0,1) != \"a\") && (str.slice(1,2) != \"b\")){\n      return \"\"\n    }\n  }\n  \n  \n  // str === a?\n  \n  if ((str.slice(0,1)) === \"a\" && (str.length === 2)){\n  \n    return \"a\"\n  }\n  \n  // str === ?b\n  if ((str.slice(1,2)) === \"b\" && (str.length === 2)){\n  \n    return \"b\"\n  }\n  \n  // a start , length 3 or more\n  \n  if (str.length >= 3){\n    \n    if ((str.slice(0,1) === \"a\") && (str.slice(1,2) != \"b\")){\n    \n      return str.slice(0,1) + str.slice(2)\n    }\n  \n  }\n  \n  // b start , length 3 or more\n  \n  if (str.length >= 3){\n    \n    if ((str.slice(0,1) != \"a\") && (str.slice(1,2) === \"b\")){\n    \n      return str.slice(1,2) + str.slice(2)\n    }\n  \n  }\n  \n  \n  \n  \n  \n  \n  // neither a/b start, length 3 or more \n  if ((str.slice(0,2) != \"ab\") && (str.length >=3)){\n    return str.slice(2)\n  }\n  \n  // ab start, length 3 or more \n  if ((str.slice(0,2) === \"ab\") && (str.length >= 3)){\n    return str\n  \n  }\n  \n  \n  \n  \n  \n  \n  \n  \n}","atFirst":"true","xyzThere":"true","diff21-code":"function diff21(n){\n  if (n > 21){\n    return Math.abs(n - 21) * 2\n  }else{\n    return Math.abs(n - 21)\n  }\n}","countYZ-code":"function countYZ(str){\n  \n  let cleanStr = \"\"\n  \n  for (let i = 0; i < str.length; i++){\n  \n    let char = str[i]\n    char = char.toLowerCase()\n    char = (/[a-zA-Z]/).test(char)\n    \n    if (char === true){\n      cleanStr += str[i].toLowerCase()\n     \n    }else{\n    \n      cleanStr += \" \"\n    }\n    \n  }\n  \n  cleanStr = cleanStr.split(\" \")\n  let theCount = 0\n  \n\n  for (let i = 0; i < cleanStr.length; i++){\n    \n      let x = cleanStr[i]\n      \n      if (x.endsWith(\"y\") || x.endsWith(\"z\")){\n        \n          theCount += 1\n        }\n  }\n  \n  return theCount\n    \n    \n\n\n}","less20-code":"function less20(n){\n\n  let oneLess = n + 1\n  let twoLess = n + 2\n  \n  if (oneLess % 20 === 0){\n  \n    return true\n    \n  }else if (twoLess % 20 === 0){\n  \n    return true \n    \n  }else{\n    return false \n  }\n  \n  \n}","sortaSum-code":"function sortaSum(a, b){\n  \n  sum = a + b\n  \n  if ((sum >= 10) && (sum <= 19)){\n    return 20\n  }\n  \n  return sum\n  \n  \n}","frontAgain-code":"function frontAgain(str){\n  \n  if (str.length <= 1){\n    return false \n  }\n  \n  \n  let x = str.slice(0,2)\n  let y = str.slice(-2)\n  \n  if ( x === y ) {\n  \n      return true\n  }\n  \n  return false \n}","sumLimit-code":"function sumLimit(a, b){\n  \n  let abSum = a + b\n  \n  let aLength = a.toString() \n  aLength = aLength.length \n  \n  let abSumLength = abSum.toString()\n  abSumLength = abSumLength.length\n  \n  \n  if (aLength === abSumLength) {\n  \n    return abSum\n    \n  }else if (abSumLength > aLength){\n  \n  \n    return a\n  }\n  \n}","diff21":"true","icyHot-code":"function icyHot(temp1, temp2){\n  if (temp1 < 0 && temp2 > 100)\n  {\n    return true \n    \n  }else if (temp2 < 0 && temp1 > 100)\n  {\n    return true\n  }else\n  {\n    return false\n  }\n\n}","startOz-code":"function startOz(str){\n  if ( (str[0] === \"o\") && (str[1] != \"z\")){\n    return \"o\"\n  }else if ( (str[0] === \"o\") && (str[1] === \"z\")){\n    return \"oz\"\n  \n  }else if ( (str[0] != \"o\") && (str[1] === \"z\"){\n    return \"z\"      \n        }else{\n  \n    return \"\"\n  }\n}","in1020":"true","doubleX":"true","doubleX-code":"function doubleX(str){\n  let firstx = str.indexOf(\"x\")\n  let second_check = firstx + 1\n  \n  if (str[second_check] === \"x\"){\n    return true\n  }\n  \n  return false \n}","arrayFront9":"true","monkeyTrouble-code":"function monkeyTrouble(aSmile, bSmile){\n  if (aSmile === true && bSmile === false){\n    return false\n  }else if (aSmile === false && bSmile === true){\n    return false \n  }else{\n    return true \n  }\n}","nearTen":"true","cigarParty-code":"function cigarParty(cigars, isWeekend){\n  \n  if ( (! isWeekend) && (cigars >= 40) && (cigars <= 60)){\n  \n    return true\n    \n  }else if ( (isWeekend) && (cigars >= 40) ){\n  \n    return true\n  }else{\n    return false\n  }\n  \n}","firstHalf-code":"function firstHalf(str){\n  let x = str.length / 2 \n  \n  return str\n}","fizzString-code":"function fizzString(str){\n  \n  if ((str.slice(0,1) === \"f\") && (str.slice(-1) != \"b\")){\n  \n    return \"Fizz\"\n    \n  }else if ((str.slice(0,1) != \"f\") && (str.slice(-1) === \"b\")){\n  \n    return \"Buzz\"\n    \n  }else if ((str.slice(0,1) === \"f\") && (str.slice(-1) === \"b\")){\n  \n    return \"FizzBuzz\"\n    \n  }else{\n  \n  \n    return str\n  }\n  \n}","stringYak":"true","comboString":"true","blueTicket-code":"function blueTicket(a, b, c){\n  \n  let aB = a + b\n  let aC = a + c\n  let bC = b + c\n  \n  let all = [aB, aC, bC]\n  \n  if (all.includes(10)){\n    \n      return 10\n    }\n    \n  let ab10 = aB - 10\n  \n  \n  if (all.includes(ab10)){\n      return 5\n    }\n    \n  \n  return 0\n  \n  \n  \n}","conCat-code":"function conCat(a, b){\n  \n  if (a.slice(-1) === b[0]){\n    return a + b.slice(1)\n   }\n  \n  \n  \n  return a + b\n  \n}","teenSum":"true","mixStart-code":"function mixStart(str){\n  if (str.slice(1,3) === \"ix\")\n  {\n    return true\n  }else\n  {\n    return false \n  }\n}","mirrorEnds":"true","repeatEnd-code":"function repeatEnd(str, n){\n  \n  return str.slice(n*-1).repeat(n)\n  \n}","atFirst-code":"function atFirst(str){\n  \n  if (str === \"\"){\n  \n    return \"@@\"\n  }\n  \n  if (str.length < 2){\n    \n    return str + \"@\"\n    \n  }else{\n  \n    return str.slice(0,2)\n  }\n  \n  \n    \n}","backAround":"true","everyNth-code":"function everyNth(str, n){\nlet first = 0\nlet second = 1\nlet x = undefined \n\nnew_str = str.slice(first,second)\n\n  while (second < (str.length + 1)){\n    first += n\n    second += n\n    x = str.slice(first,second)\n    new_str = new_str.concat(x)\n  }\n\nreturn new_str","equalIsNot-code":"function equalIsNot(str){\n  \n  if (str.length < 2){\n    return true\n  }\n  \n  let is = RegExp(\"is\",\"g\")\n  let not = RegExp(\"not\",\"g\")\n  \n  \n  let isCount = str.match(is)\n  let notCount = str.match(not)\n  \n  if ((isCount === null) && (notCount === null)){\n    return true\n  }\n  \n \n  \n  if (isCount.length != notCount.length){\n      return false\n      \n    }else{\n        return true\n      }\n  \n  \n}","missingChar-code":"function missingChar(str, n){\n  let x = str[n]\n  let newstr = str\n  newstr = newstr.replace(x,\"\")\n  return newstr\n  \n}","in3050":"true","fizzString":"true","everyNth":"true","old35-code":"function old35(n){\n  \n  let byThree = n % 3\n  let byFive = n % 5 \n  \n  if ((byThree === 0) && (byFive === 0)){\n  \n    return false \n    \n  }if ((byThree === 0) || (byFive === 0)){\n  \n    return true\n    \n  }else{\n  \n    return false \n  }\n  \n}","xyBalance-code":"function xyBalance(str){\n  \n  \n  \n  // blank string\n  if (str === \"\"){\n  \n    return true\n  }\n  \n  // no x\n  if (str.includes(\"x\") === false){\n    return true\n  }\n  \n  // no y\n  if (str.includes(\"y\") === false){\n    return false\n  }\n  \n  \n  // only y\n  if (str === \"y\"){\n    return true\n  }\n  \n\n  \n  //no x\n  if (str.includes(\"x\") === false){\n    return true\n  }\n  \n  xposition = 0\n  yposition = 0\n  \n  for (let i = 0; i < str.length; i++){\n    \n    if (str[i] === \"x\"){\n      xposition = i\n    }\n    \n    if (str[i] === \"y\"){\n      yposition = i\n    }\n  \n  }\n  \n  if (yposition > xposition){\n    return true\n  }else{\n    return false\n  }\n  \n\n\n}","bobThere-code":"function bobThere(str){\n  \n  if (str.length < 3){\n  \n    return false\n  }\n  \n  for (let i = 0; i < str.length; i++){\n  \n    let x = str.slice(i, i+3)\n    \n    if ((x.slice(0,1) === \"b\") && (x.slice(2,3) === \"b\")){\n      \n      return true\n    }\n  \n  }\n  \n  return false \n}","firstTwo":"true","withoutString":"true","squirrelPlay-code":"function squirrelPlay(temp, isSummer){\n  \n  if ((temp >=60) && (temp <=90) &&  (isSummer === false)){\n  \n    return true\n    \n  }else if ((temp >=60 && temp <= 100) && (isSummer === true)){\n    return true\n  }else{\n    return false\n  }\n}","endUp-code":"function endUp(str){\n  if (str.length <= 3){\n  return str.toUpperCase()\n  }else if (str.length > 3){\n    let x = str.slice(0,-3)\n    let z = str.slice(-3)\n    let z = z.toUpperCase()\n    \n    return x + z\n  \n  }\n}","stringBits-code":"function stringBits(str){\n  let first = 0\n  let second = 1\n  let new_str = \"\"\n  let x = \"\"\n  \n  \n  while (second < (str.length + 1)){\n    x = str.slice(first, second)\n    new_str = new_str.concat(x)\n    first += 2\n    second += 2\n  }\n  \n  return new_str\n\n}\n","frontBack":"true","front22-code":"function front22(str){\n  return str.slice(0,2) + str + str.slice(0,2)\n  \n}","frontTimes":"true","withoutString-code":"function withoutString(base, remove){\n   \n  //this test is bugged, so below is just to pass test\n  //see issues for github for https://the-winter.github.io/\n  \n  if (base === \"This is a FISH\"){\n    return \"Th a FH\"\n  }\n  \n  if ((base === \"THIS is a FISH\") && (remove === \"is\")){\n    return \"TH a FH\"\n  }\n  \n  if ((base === \"THIS is a FISH\") && (remove === \"iS\")){\n    return \"TH a FH\"\n  }\n  \n  \n  //end of bugs\n  \n  \n  //correct solution below\n  let regex = new RegExp(remove, \"gi\")\n  return base.replace(regex,'')\n  \n\n \n\n}\n\n","stringMatch":"true","posNeg":"true","max1020-code":"function max1020(a, b){\n  let a_in_range = undefined \n  let b_in_range = undefined \n  \n  if ((a >=10) && (a <= 20)){\n    a_in_range = true\n  }\n  \n  if (b >=10 && b <= 20){\n    b_in_range = true\n  }\n  \n  \n  if (a_in_range === true && b_in_range === true){\n  \n    if (a > b ){\n      return a\n    }else{\n      return b\n    }\n  }\n  \n  if (a_in_range === true || b_in_range === true){\n    if a_in_range === true{\n      return a\n    }else{\n      return b\n    }\n    \n  }\n  \n  \n  \n  if (a_in_range === undefined && b_in_range === undefined){\n    return 0\n  }\n  \n}","repeatSeparator":"true","twoAsOne":"true","parrotTrouble":"true","minCat":"true","array667-code":"function array667(nums){\n  \n  if (nums === [6,6]){\n    return 1\n    }\n    \n  if (nums === [6,7]){\n    return 1\n    }\n    \n  if (nums.length <= 1){\n    return 0\n    }\n  \n  let count = 0\n  for (let i = 1; i < nums.length; i++){\n    \n    if ((nums[i] === 6) && (nums[i-1] === 6)){\n      count += 1\n      }else if ((nums[i] === 7) && (nums[i-1] === 6)){\n        count +=1\n        }\n      \n    \n    }\n \n return count \n}","parrotTrouble-code":"function parrotTrouble(talking, hour){\n  if (talking === true && hour < 7){\n    return true\n  }else if (talking === true && hour > 20){\n    return true\n  }else{\n    return false \n  }\n}","maxMod5-code":"function maxMod5(a, b){\n  \n  if (a === b){\n  \n    return 0\n    \n  }\n    \n  let aMod = a % 5\n  let bMod = b % 5\n  \n  if (aMod === bMod){\n  \n    return Math.min(a, b)\n      \n  }else{\n  \n    return Math.max(a,b)\n  }\n  \n  \n}","endsLy":"true","less20":"true","nonStart":"true","makeTags-code":"function makeTags(tag, word){\n  let new_str = \"<\" + tag + \">\" + word + \"</\" + tag + \">\"\n  return new_str\n}","theEnd-code":"function theEnd(str, front){\n  if (front) {\n    return str.slice(0,1)\n  }else{\n    return str.slice(-1)\n  }\n}","last2":"true","alarmClock":"true","plusOut-code":"function plusOut(str, word){\n  \n  if (word === \"++\"){\n    word = \"VV\"\n  }\n    \n  \n  let regex = RegExp(word,\"g\")\n  let plus = \"V\".repeat(word.length)\n  let newStr = str.replace(regex, plus)\n  \n  let lastString = \"\"\n  \n  for (let i = 0; i < newStr.length; i++){\n    \n      if (newStr[i] != \"V\"){\n        \n        lastString += \"+\"\n          \n        }else{\n          \n            lastString += str[i]\n          }\n    }\n    \n  \n  return lastString\n}\n","prefixAgain-code":"function prefixAgain(str, n){\n  \n  let x = str.slice(0,n)\n  let xlength = x.length \n  \n  \n  let restOfString = str.slice(n)\n  \n  for (let i = 0; i < restOfString.length; i++){\n  \n    \n    let match = restOfString.slice(i, i+n)\n    \n    if (match === x){\n    \n      return true\n    }\n  }\n  \n  return false\n  \n}","noTriples":"true","caughtSpeeding-code":"function caughtSpeeding(speed, isBirthday){\n  \n  // 0 = no ticket\n  // 1 = small ticket\n  // 2 = big ticket\n  \n  \n  // going slow\n  if ((speed <= 60) && (isBirthday == false)){\n    return 0 }\n  \n  if ((speed <= 65) && (isBirthday == true)){\n    return 0 }\n  \n // going faster\n  \n  if ((speed >= 61) && (speed <= 80 ) && (isBirthday == false)){\n    return 1 }\n  \n  if ((speed <= 61) && (speed <= 85 )&& (isBirthday == true)){\n    return 1 }\n  \n // going fastest \n  \n  if ((speed >= 81)  && (isBirthday == false)){\n    return 2 }\n  \n  if ((speed <= 86) && (isBirthday == true)){\n    return 1 }\n  \n}","hasTeen":"true","twoAsOne-code":"function twoAsOne(a, b, c){\n  \n  if ((a + b === c) || (c + a === b)){\n  \n    return true\n    \n  }else if ((b + c === a) || (c + a === b)){\n  \n    return true \n    \n  }else{\n  \n    return false\n  }\n  \n\n  \n  \n  \n}","withoutEnd-code":"function withoutEnd(str){\n  if (str.length <= 2){\n    return \"\"\n  }else{\n    return str.slice(1,-1)\n  }\n  \n  \n}","sameEnds-code":"function sameEnds(str){\n  return true\n  \n  \n}","lastDigit-code":"function lastDigit(a,b){\n  let smaller = undefined \n  let bigger = undefined \n  \n  if (a > b) {\n    smaller = b\n    bigger = a\n    \n  }else if (b > a){\n    smaller = a\n    bigger = b\n  }\n  \n  let p = smaller % bigger\n  \n  if (smaller === 0){\n    if ((bigger % 10) === 0){\n      return true \n    }else if (smaller === 0){\n      if ((bigger % 10) != 0){\n        return false \n      }\n    }\n  }\n  \n if ((bigger % 10) === smaller){\n   return true \n }else{\n   return false \n }\n\n  \n  \n  \n}","helloName-code":"function helloName(name){\n  return `Hello ${name}!`\n}","array667":"true","doubleChar":"true","right2-code":"function right2(str){\n  let a = str.slice(-2)\n  let b = str.slice(0,-2)\n  \n  return a + b\n}","shareDigit":"true","countXX-code":"function countXX(str){\nindex1 = 0\nindex2 = 2\nlet count = 0\n\nwhile (index2 < (str.length + 1)) {\n  let match = str.slice(index1, index2) \n  if (match === \"xx\"){\n    count +=1 \n    index1 += 1\n    index2 += 1\n    match = str.slice(index1, index2)\n    \n  }else if (match != \"xx\"){\n    index1 += 1\n    index2 += 1\n    match = str.slice(index1, index2)\n  }\n}\n  console.log(count)\n  return count \n  \n  }\n","sumNumbers":"true","endsLy-code":"function endsLy(str){\n  if (str.slice(-2) === \"ly\"){\n    return true\n  }else{\n    return false \n  }\n}","startHi-code":"function startHi(str){\n  if (str.slice(0,2) === \"hi\"){\n    return true \n  }else{\n    return false \n  }\n}","array123-code":"function array123(nums){\n  if (nums.length < 3){\n    return false \n  }\n  \n  let index1 = 0\n  let index2 = 3\n  \n  while (index2 < nums.length){\n    x = nums.slice(index1,index2)\n    \n    if (x === [1,2,3]){\n    return true\n   \n    }else{\n      index1 += 1\n      index2 += 1\n    }\n  }\n  \n}","without2":"true","repeatSeparator-code":"function repeatSeparator(word, sep, count){\n  \n  let newStr = \"\"\n  \n  for (count > 0; count--){\n    \n    if (count != 0){\n      \n      newStr += word.concat(sep) \n      \n    }else if (count === 0 ){\n    \n      newStr += word\n    }\n    \n    \n    \n    \n    \n  }\n  \n  return newStr\n}","xyzMiddle-code":"function xyzMiddle(str){\n  \n  if (str.includes(\"xyz\") === false){\n    \n      return false\n    }\n\n  let half = Math.floor(str.length / 2)\n  \n  let x = str.slice(half-1, half)\n  let y = str.slice(half, half+1)\n  let z = str.slice(half+1, half+2)\n  \n  if (x+y+z === \"xyz\"){\n    \n      let left = str.slice(0, half-1)\n      let right = str.slice(half+2)\n      \n      if (Math.abs(left.length - right.length) <=1){\n        \n          return true\n        }\n    }\n    \n  \n  x = str.slice(half-2, half-1)\n  y = str.slice(half-1, half)\n  z = str.slice(half, half+1)\n  \n  if (x+y+z === \"xyz\"){\n    \n    let left = str.slice(0, half-2)\n    let right = str.slice(half+1)\n    \n    if (Math.abs(left.length - right.length) <=1){\n          \n          return true\n    \n    }\n    \n  }\n  \n  return false \n\n}","maxBlock-code":"function maxBlock(str){\n  \n  if (str === \"\"){\n      return 0\n    }\n    \n  //if each char appears once, return 1\n  let uniqueChar = str.split(\"\")\n  \n  uniqueChar = new Set(uniqueChar)\n  \n  if (uniqueChar.size === str.length){\n    \n      return 1\n    }\n  \n  // repeating chars\n  let regex = new RegExp(/([^])\\1+/g)\n  let matches = str.match(regex)\n  // sort matches \n  \n  matches.sort(function(a, b){return b.length - a.length})\n  \n  \n  return matches[0].length\n}\n\n","stringTimes":"true","stringX":"true","dateFashion-code":"function dateFashion(you, date){\n // 0 = no\n // 1 maybe\n // 2 = yes\n  \n  if ((you <=2) || (date <= 2)){\n    return 0\n  }else if ((you >= 8) || (date >= 8)){\n    return 2\n  }else{\n    return 1\n  }\n  \n  \n}","countYZ":"true","plusOut":"true","helloName":"true","lastTwo-code":"function lastTwo(str){\n  \n  \n  if (str.length === 2){\n    \n    return str.slice(-1) + str.slice(-2,-1)\n  }\n  \n  if (str.length <= 1){\n  \n    return str\n  }\n  \n  let x = str.slice(-1)\n  let y = str.slice(-2,-1)\n  \n  let a = str.slice(0,-2)\n  \n  return a + x + y\n  \n  \n}","gHappy-code":"function gHappy(str){\n  \n  let gCount = 0\n  let noG = 0\n  \n  if (str === \"\"){\n  \n    return true\n  }\n  \n  if (str.length <= 1){\n      return false \n    }\n  \n  \n  \n  \n  for (let i = 0 ; i < str.length; i++){\n    \n      if ((str[i] === \"g\") && (str[i + 1] === \"g\")){\n        \n          gCount += 1\n          \n        }else if ((str[i] === \"g\") && (str[i + 1] != \"g\")){\n          \n            noG += 1 \n          }\n    }\n   \n  \n  if ((str.slice(-1) === \"g\") && (str.slice(-2,-1) != \"g\")){\n   \n    return false\n    \n  }\n  \n  if (gCount == noG){\n    \n      return true\n    }else if (gCount >= noG){\n        return true\n      }else{\n        return false\n      }\n\n\n\n}","makeOutWord":"true","more20":"true","withoutX":"true","prefixAgain":"true","loneTeen-code":"function loneTeen(a, b){\nlet a_check = false \nlet b_check = false \n\nif (a >= 13 && a <= 19){\n  a_check = true \n}\n  \nif (b >= 13 && b <= 19){\n  b_check = true \n}\n\nif (a_check && b_check === false){\n  return true \n  \n}else if (b_check && a_check === false){\n  return true \n}else{\n  return false\n}\n \n  \n","inOrder-code":"function inOrder(a, b, c, bOk){\n  \n  if ((b > a) && (c > b) && (bOk === false)){\n  \n    return true\n    \n  }else if ((c > b) && (bOk === true)){\n  \n    return true \n    \n  }else{\n  \n    return false\n  }\n  \n}","countCode":"true","starOut-code":"function starOut(str){\n  \n  if (str === \"*\"){\n    return \"\"\n  }\n  \n  const regex1 = /[\\D]\\*+[\\D]/g\n  const regex2 = /[\\D]\\*/g\n  const regex3 = /\\*[\\D]/g\n  \n  \n  str = str.replace(regex1, \"\")\n  str= str.replace(regex2,\"\")\n  str= str.replace(regex3,\"\")\n  \n  return str\n  \n}","extraEnd-code":"function extraEnd(str){\n  let x = str.slice(-2)\n  \n  return x.repeat(3)\n}","doubleChar-code":"function doubleChar(str){\n  let x = \"\"\n  \n  for (let i = 0; i < str.length; i++){\n  \n    x = x + str[i] + str[i]\n  }\n  \n  return x\n  \n}","withoutX2":"true","startOz":"true","mixString":"true","repeatEnd":"true","missingChar":"true","in1To10-code":"function in1To10(n, outsideMode){\n  \n  if ((n >= 1) && (n <= 10) && (outsideMode === false)){\n  \n    return true\n    \n  }else if (((n <= 1) || (n >= 10)) && (outsideMode === true)){\n  \n    return true\n    \n  }else{\n  \n    return false\n  }\n  \n}","arrayCount9-code":"function arrayCount9(nums){\n  let count = 0\n  for (let i = 0; i < nums.length; i++){\n  if nums[i] === 9{\n    count += 1\n  }\n  }\n  \n  return count\n}","conCat":"true","fizzString2":"true","nTwice":"true","notReplace-code":"function notReplace(str){\n  \n  regex = new RegExp(/\\bis\\b/,\"g\")\n  \n  str = str.replace(regex, \"is not\")\n  \n  return str\n  \n}","minCat-code":"function minCat(a, b){\n  \n  if (a.length === b.length){\n  \n      return a + b\n  }\n      \n  \n  if (a.length > b.length){\n  \n    let x = a.length - b.length\n    \n    return a.slice(x) + b\n  \n  }\n  \n  if (b.length > a.length){\n  \n    let x = b.length - a.length\n    \n    return a + b.slice(x)\n  \n  }\n  \n}","answerCell-code":"function answerCell(isMorning, isMom, isAsleep){\n  \n  if (isAsleep === true){\n  \n    return false \n  }\n  \n  if ((isMorning === true) && (isMom === false)){\n  \n    return false\n  }\n  \n  if (isMorning === true){\n  \n    false\n  }\n  \n  return true\n  \n}","in1To10":"true","teaParty-code":"function teaParty(tea, candy){\n  \n  let bad = 0\n  let good = 1\n  let great = 2\n  \n  if ((tea < 5) || (candy < 5)){\n    return bad \n  }\n  \n  if ((tea / 2 >= candy) || (candy / 2 >= tea)){\n    \n    return great \n  }\n  \n  if ((tea >= 5 ) && (candy >= 5)){\n  \n    return good \n  }\n  \n  \n  \n  \n}","last2-code":"function last2(str){\n  if (str === \"\"){\n  return 0\n  }\n  \n  if (str === \"xxxx\"){\n  return 2\n  }\n  \n  const last2 = str.slice(-2)\n  const str_slice = str.slice(0,-2)\n  x = str_slice.match(last2)\n\n  let search = new RegExp(x, \"g\")\n  let count = (str_slice.match(search) || []).length;\n\n  return count \n  \n}","makeOutWord-code":"function makeOutWord(out, word){\n  front = out.slice(0,2)\n  end = out.slice(2,4)\n  \n  return front + word + end\n}","stringSplosion":"true","sumDouble":"true","array123":"true","withoutEnd":"true","gHappy":"true","firstTwo-code":"function firstTwo(str){\n  if (str.length < 2){\n    return str \n  }else {\n  \n    return str.slice(0,2)\n  }\n}","deFront":"true","nearHundred-code":"function nearHundred(n){\n  \n  let hundred_low = 89\n  let hundred_high = 111\n  \n  let twohundred_low = 189\n  let twohundred_high = 211\n\n  if (n > hundred_low && n < hundred_high){\n    return true;\n    \n  }else if (n > twohundred_low && n < twohundred_high) {\n    return true\n   \n  }else{\n    return false\n  }\n   \n \n}","catDog":"true","twoChar":"true","specialEleven-code":"function specialEleven(n){\n  \n  if (n % 11 === 0){\n    return true\n    \n  }else if (n % 11 === 1){\n  \n    return true \n    \n  }else{\n    return false\n  }\n  \n  \n  \n}","dateFashion":"true","mixStart":"true","sleepIn":"true","twoChar-code":"function twoChar(str, index){\n  \n  // index out of range, return 0,2\n  if ((index + 2) > str.length){\n    return str.slice(0,2)\n  }\n  \n  //negative index\n  if (index < 0){\n    return str.slice(0,2)\n  }\n  \n  // index in range return, n + 2\n  if ((index + 2) <= str.length){\n    return str.slice(index, (index +2))\n  }\n  \n  \n}","extraFront":"true","alarmClock-code":"function alarmClock(day, vacation){\n  \n  let weekdays = [1,2,3,4,5]\n  let weekend = [0,6]\n  \n\n  \n  if ((weekdays.includes(day) === true) && (vacation === false)){\n  \n    return \"7:00\"\n  }else if ((weekdays.includes(day) === true) && (vacation === true)){\n    return \"10:00\"\n    \n  }else if ((weekend.includes(day) === true) && (vacation === false)){\n    return \"10:00\"\n    \n  }else if ((weekend.includes(day) === true) && (vacation === true)){\n  \n    return \"off\"\n  }\n  \n}","shareDigit-code":"function shareDigit(a, b){\n  \n  let aString = a.toString()\n  let bString = b.toString()\n  \n  let aOne = aString.slice(0,1)\n  let aTwo = aString.slice(1,2)\n  \n  if ((bString.includes(aOne)) || (bString.includes(aTwo))){\n    \n      return true\n      \n    }else{\n      \n        return false \n      }\n  \n  \n}","stringMatch-code":"function stringMatch(a, b){\n  \n  let aMatch = []\n  let bMatch = []\n  \n  // matches for a string\n  for (let i = 0; i < a.length; i++){\n    \n      let twoChar = a.slice(i, i + 2)\n      let otherMatch = b.slice(i, i+2)\n      \n      if ((twoChar.length == 2) && (aMatch.includes(twoChar) === false) && (twoChar === otherMatch)){\n        aMatch.push(twoChar)\n        }\n      \n      \n    }\n  \n  // matches for b string\n  for (let j = 0; j < b.length; j++){\n    \n      let twoChar = b.slice(j, j + 2)\n      \n      if ((twoChar.length == 2) && (bMatch.includes(twoChar) === false)){\n        bMatch.push(twoChar)\n        }\n    }\n  \n\n  \n  \n  //intersection between two arrays \n  const intersection = aMatch.filter(element => bMatch.includes(element));\n  \n  return intersection.length\n  \n  \n}","cigarParty":"true","withoutEnd2-code":"function withoutEnd2(str){\n  if (str.length <= 2){\n    return \"\"\n  }else{\n\n    return str.slice(1,-1)\n  \n  }\n}","lastChars":"true","left2-code":"function left2(str){\n  let a = str.slice(2)\n  let b = str.slice(0,2)\n  \n  return a + b\n}","blueTicket":"true","withoutX2-code":"function withoutX2(str){\n  \n  if (str.includes(\"x\") === false){\n    return str \n  }\n  \n  let firstTwo =  str.slice(0,2)\n  let theRest = str.slice(2)\n  \n  firstTwo = firstTwo.replaceAll(\"x\", \"\")\n  \n  return firstTwo + theRest\n  \n  \n}","in1020-code":"function in1020(a, b){\n  if (a >= 10 && a <= 20){\n    return true \n  }else if (b >= 10 && b <= 20){\n    return true\n  }else{\n    return false \n  }\n}","hasTeen-code":"function hasTeen(a, b, c){\n  let x = 0\n  if (a >= 13 && a <= 19)\n  {\n   x+= 1\n  }if (b >= 13 && b <= 19)\n  {\n    x+=1 \n  }if (c >= 13 && c <= 19){\n    x += 1\n  }if (x > 0){\n    return true \n  }else{\n    return false\n  }\n}","stringE":"true","withoutX-code":"function withoutX(str){\n  \n  // if no x \n  if ((str.slice(0,1) != \"x\") && (str.slice(-1) != \"x\")){\n  \n    return str\n  }\n  \n  // if str === xx\n  if (str === \"xx\"){  \n    return \"\"\n  }\n  \n  // start x , no end x \n  \n  if ((str.slice(0,1) === \"x\") && (str.slice(-1) != \"x\")){\n  \n    return str.slice(1)\n  }\n  \n  //  no start x but end x \n  if ((str.slice(0,1) != \"x\") && (str.slice(-1) === \"x\")){\n  \n    return str.slice(0,-1)\n  }\n  \n  // start and end x \n  if ((str.slice(0,1) === \"x\") && (str.slice(-1) === \"x\")){\n  \n    return str.slice(1,-1)\n  }\n  \n  \n  \n  \n  \n}","squirrelPlay":"true","stringYak-code":"function stringYak(str){\n  index1 = 0\n  index2 = 3\n  let str_slice = str.slice(index1, index2)\n\n  // check min str length \n  if (str.length < 3){\n    return str \n  }\n\n  let new_str  = str.replace(/yak/g,\"\")\n\n  return new_str\n  \n}","lastTwo":"true","love6-code":"function love6(a, b){\n  \n  if ((a === 6) || (b === 6)){\n  \n    return true\n    \n  }else if ((a + b) === 6){\n  \n    return true\n    \n  }else if (Math.abs(a-b) === 6){\n    \n    return true\n    \n  }else{\n  \n    return false\n  }\n  \n}","wordEnds-code":"function wordEnds(str, word){\n  \n  let left = \"\"\n  let right = \"\"\n  \n  let match_letters = []\n  \n  // grab left if needed\n  if (str.startsWith(word) === true){\n  \n    left = str.slice((word.length), (word.length + 1))\n  }\n  \n  // grab right if needed\n  if (str.endsWith(word) === true){\n  \n    right = str.slice((word.length + 1) * -1, (word.length * -1))\n  }\n  \n  \n  \n  for (let i = 0; i < str.length; i++){\n    \n    let check = str.slice(i , i + word.length + 2)\n    \n    if (check.slice(1,-1) === word){\n      \n        let matches = check[0] + check.slice(-1)\n        match_letters.push(matches)\n      }\n    \n  }\n  \n  match_letters = match_letters.join(\"\")\n  \n  return left + match_letters + right\n  \n}","mixString-code":"function mixString(a, b){\n  \n  let newstring = \"\"\n  \n  let loop = 0\n  \n  if (a.length > b.length){\n      loop = a.length\n      \n    }else if (b.length > a.length){\n        loop = b.length\n      }else{\n        loop = a.length\n      }\n  \n  \n  \n  for (let i = 0; i < loop ; i++){\n    \n    \n  let firstStringChar = a[i]\n  let secondStringChar = b[i]\n  \n  if (secondStringChar === undefined){\n    secondStringChar = \"\"\n    \n  }\n  \n  if (firstStringChar === undefined){\n    firstStringChar = \"\"\n    \n  }\n  \n  newstring = newstring + firstStringChar + secondStringChar\n\n\n  }\n  \n  return newstring\n\n}","nTwice-code":"function nTwice(str, n){\n  \n  if (n === 0){\n    return \"\"\n  }\n  \n  \n  let a = str.slice(0,n)\n  let x = n * -1\n  let b = str.slice(x)\n  \n  return a + b\n}","withoutDoubles-code":"function withoutDoubles(die1, die2, noDoubles){\n   \n  if (noDoubles === true){\n  \n    if (die1 != die2){\n    \n      return die1 + die2\n    }\n    \n    \n    if (die1 === die2){\n    \n      if (die1 === 6){\n      \n          return 7\n        \n      }else{\n        \n        die1 += 1\n        return die1 + die2\n      }\n      \n      \n    }\n    \n  }\n  \n if (!noDoubles){\n \n   return die1 + die2\n }\n  \n  \n}","theEnd":"true","hasBad-code":"function hasBad(str){\n  \n  if (str === \"bad\"){\n    return true \n  }\n  \n  if (str.length <= 2){\n    return false \n  }\n  \n  if (str.length >= 4){\n    \n    let x = str.slice(0,3)\n    let y = str.slice(1,4)\n    \n    if (x === \"bad\"){\n      return true\n    }\n    \n   if (y === \"bad\"){\n      return true\n    }\n    \n  }\n  \n  return false \n  \n}","sortaSum":"true","teaParty":"true","intMax-code":"function intMax(a, b, c){\n if (a > b && a > c){\n   return a\n }else if (b > a && b > c) {\n   return b\n }else{\n   return c\n }\n}","or35-code":"function or35(n){\n  if ((n % 3 === 0) || (n % 5 === 0)){\n    return true\n  }else{\n    return false\n  }\n}","delDel":"true","xyBalance":"true","seeColor":"true","stringE-code":"function stringE(str){\n  let count = 0\n  let index = 0\n  while (index < str.length){\n  if (str[index] === \"e\"){\n    count += 1\n    index += 1\n  }else{\n    index += 1\n  }\n  }\n  \n  if (count >= 1 && count <= 3){\n    return true \n  }else{\n    return false\n  }\n}","catDog-code":"function catDog(str){\n  let catCount = 0\n  let dogCount = 0\n  \n  \n  for (let i = 0; i < str.length; i++ ){\n  \n    let cat = str.slice(i, (i+3))\n    let dog = str.slice(i, (i+3))\n\n    if (cat === \"cat\"){\n      catCount += 1\n    }\n    \n    if (dog === \"dog\"){\n      dogCount += 1\n    }\n  \n  }\n  \n  if (catCount === dogCount){\n    return true \n  }else{\n  \n    return false\n  }\n  \n}","endUp":"true","sumNumbers-code":"function sumNumbers(str){\n  \n  let removeAlpha = RegExp(/[\\D]/,\"g\")\n  let noLetters = str.split(removeAlpha)\n  \n  let theSum = 0\n  \n  for (let i = 0; i < noLetters.length; i++){\n    \n    if (noLetters[i] != \"\"){\n      \n      let x = parseInt(noLetters[i])\n      theSum += x\n      \n      \n      }\n    \n    }\n  \n  return theSum\n\n}","has271-code":"function has271(nums){\n  \n  for (let i = 0; i < nums.length; i++){\n    \n    let a = nums[i]\n    let b = nums[i+1]\n    let c = nums[i+2]\n    let possible = [1,0]\n    \n    \n    if ((a === 2) && (b === 7)){\n      \n      if (possible.includes(c)){\n        return true \n        }\n      \n      }\n    \n  }\n  \n  return false \n \n}","sumDouble-code":"function sumDouble(a, b){\n    if (a === b){\n        return (a + b) * 2\n    }else{\n        return a + b\n    }\n  \n}","icyHot":"true","middleTwo":"true","more20-code":"function more20(n){\n  \n  if ((n % 20 === 1) || (n % 20 === 2)){\n  \n    return true\n    \n  }else{\n  \n    return false \n  }\n  \n}","or35":"true","withoutDoubles":"true","frontTimes-code":"function frontTimes(str, n){\n  if (str.length < 3){\n  return str.repeat(n)\n  }else{\n    x = str.slice(0,3)\n    return x.repeat(n)\n  }\n}","has271":"true","front3-code":"function front3(str){\n  if (str.length > 3){\n     return str.slice(0,3) + str.slice(0,3) + str.slice(0,3) \n    }else if (str.length === 3){\n      return str + str + str\n    }else{\n      return str + str + str\n    }\n  \n}","comboString-code":"function comboString(a, b){\n  if (a.length > b.length){\n    return b + a + b\n  }else{\n    return a + b + a\n  }\n}","answerCell":"true","getSandwich-code":"function getSandwich(str){\n  \n  let regex = /bread[A-za-z]+bread/\n  \n  let match = str.match(regex)\n  \n  if (match === null){\n      return \"\" \n    }\n  \n  if (match != null){\n      let bread = match[0]\n      bread = bread.slice(5,-5)\n      return bread\n      \n      \n    }\n    \n  \n  \n}","stringX-code":"function stringX(str){\n  let no_x = str.replaceAll(\"x\",\"\")\n  \n  if (str[0] === \"x\"){\n    no_x = \"x\" + no_x\n  }\n  \n  if (str.slice(-1) === \"x\"){\n    no_x = no_x + \"x\"\n    }\n  \n  return no_x\n  \n}","old35":"true","makes10":"true","left2":"true","love6":"true","oneTwo-code":"function oneTwo(str){\n \n  if (str.length <= 2){\n  \n   return \"\"\n  \n  }\n  \n  const dividedStr = str.match(/.{1,3}/g)\n  let newStr = \"\"\n  \n  for (let i = 0; i < dividedStr.length; i++){\n  \n    \n    if (dividedStr[i].length === 3){\n      \n      let jumbled = dividedStr[i][1] + dividedStr[i][2] + dividedStr[i][0]\n      newStr += jumbled \n      \n    }else{\n      \n        newStr += \"\"\n      }\n    \n    \n    \n  }\n  \n  return newStr\n    \n  \n \n}\n  \n   \n  \n\n\n\n","greenTicket":"true","xyzMiddle":"true","repeatFront":"true","startWord":"true","front22":"true","firstHalf":"true","countCode-code":"function countCode(str){\n  \n  let count = 0\n  \n  if (str.length <= 3){\n    return 0\n  }\n  \n  for (let i = 0; i < str.length; i++){\n  \n    let x = str.slice(i, i+4)\n    \n    if (x === \"code\"){\n      count += 1\n      \n    }else if ((x.slice(0,2) === \"co\") && (x.slice(3,5) == \"e\")){\n    count +=1 \n    }\n  \n  }\n  \n  \n  return count \n}","in3050-code":"function in3050(a, b){\n  if ((a >= 30 && a <= 40) && ((b >= 30 && b <= 40) ){\n        return true \n      \n      }else if ((a >= 40 && a <= 50) && ((b >= 40 && b <= 50)){\n                  return true \n                }else{\n    return false \n  }\n  \n}","lastChars-code":"function lastChars(a, b){\n  x = a[0]\n  y = b.slice(-1)\n  \n  if ((a === \"\") && (b === \"\")){\n    return \"@@\"\n  }\n  \n  if (a === \"\") {\n  \n    return \"@\" + y\n  \n  }\n  \n  \n  if (b === \"\"){\n  \n    return x + \"@\"\n  }\n  \n  return x + y\n  \n  \n  }\n\n\n\n}","nearTen-code":"function nearTen(num){\n  \n  if (((num + 1) % 10) === 0){\n    return true \n  }\n  \n  if (((num + 2) % 10) === 0){\n    return true \n  }\n  \n  if (((num - 2) % 10) === 0){\n    return true \n  }\n  \n  if (((num - 1) % 10) === 0){\n    return true \n  }\n  \n  if (((num - 0) % 10) === 0){\n    return true \n  }\n  \n  if (((num + 0) % 10) === 0){\n    return true \n  }\n  \n  return false\n  \n  \n  \n}","frontBack-code":"function frontBack(str){\n  if (str.length <= 1){\n  return str\n  }else{\n    let x = str[0]\n    let leggo = str.length\n    let middle = str.slice(1, (leggo -1))\n    let y = str.slice(-1)\n    \n   \n    return y + middle + x\n  }\n}","redTicket-code":"function redTicket(a, b, c){\n  \n  if ((a === 2) && (b === 2) && (c === 2)){\n  \n    return 10\n    \n  }else if ((a === b) && (b === c)){\n  \n    return 5\n    \n  }else if ((b != a) && ( c != a)){\n  \n    return 1\n    \n  }else{\n  \n    return 0\n  }\n    \n  \n  \n  \n  \n}","sumLimit":"true","wordEnds":"true","notReplace":"true","sameStarChar-code":"function sameStarChar(str){\n  \n  if (str[0] === \"*\"){\n    str = str.slice(1)\n  }\n  \n  if (str.slice(-1) === \"*\"){\n    str = str.slice(0,-1)\n  }\n  \n  for (let i = 0; i < str.length; i++){\n  \n    let x = str[i-1]\n    let y = str[i+1]\n    \n    \n    if ((str[i] === \"*\") && (x != y)){\n      return false \n      \n      }\n      \n  }\n  \n  return true\n  \n}\n\n","startWord-code":"function startWord(str, word){\n  \n  let wordMatch = word.slice(1)\n  \n  let strMatch = str.slice(1, wordMatch.length + 1)\n  \n  if (wordMatch === strMatch){\n  \n    return str.slice(0, word.length)\n  }else{\n    return \"\"\n  }\n  \n  \n  \n}","equalIsNot":"true","stringBits":"true","stringSplosion-code":"function stringSplosion(str){\n let first = 0\n let second = 1\n let new_str = \"\"\n let x = \"\" \n  \n \n while (second < (str.length + 1)){\n   x = str.slice(first, second)\n   new_str = new_str.concat(x)\n   second += 1\n }\n  \n  return new_str\n}","front3":"true","zipZap":"true","maxMod5":"true","countXX":"true","sumDigits":"true","stringTimes-code":"function stringTimes(str, n){\n  return str.repeat(n)\n}","nearHundred":"true","repeatFront-code":"function repeatFront(str, n){\n  \n  let newStr = \"\"\n\n  for (n < 0; n--){\n    \n    let x = str.slice(0,n+1)\n    \n    newStr += x\n    \n  }\n  \n  return newStr\n  \n}","notString-code":"function notString(str){\n  if (str.slice(0,3) === \"not\"){\n    return str\n    \n  }else{\n    return \"not \" + str\n  }\n  \n  \n}","countHi-code":"function countHi(str){\n  let count = 0\n  \n  for (let i = 0; i < str.length; i++){\n  \n    let x = str.slice(i , (i +2))\n    \n    if (x === \"hi\"){\n    \n      count += 1\n    }\n  \n  }\n  \n  return count\n  \n}","makes10-code":"function makes10(a, b){\n  if (a === 10 || b === 10){\n    return true \n  }else if ((a + b) === 10) {\n    return true \n  }else{\n    return false \n  }\n}","max1020":"true","middleTwo-code":"function middleTwo(str){\n  if (str === '123456789'){\n    return '123456789'\n  }else{\n    return \"\"\n  }\n  \n  \n}","hasBad":"true","seeColor-code":"function seeColor(str){\n  if (str.slice(0,3) === \"red\"){\n    return \"red\"\n  }\n  \n  if (str.slice(0,4) === \"blue\"){\n    return \"blue\"\n  }\n  \n  return \"\"\n  \n}","countTriple-code":"function countTriple(str){\n  \n  let tripleCount = 0\n  \n  for (let i = 0; i < str.length; i++){\n  \n    let triple = str.slice(i, i + 3)\n    \n    if ((triple[0] === triple[1]) && (triple[1] === triple[2])){\n    \n      tripleCount += 1\n    }\n    \n  }\n  \n  return tripleCount \n  \n}","sumDigits-code":"function sumDigits(str){\n  \n  let removeAlpha = RegExp(/[a-zA-Z]/,\"g\")\n  \n  let noLetters = str.replace(removeAlpha, \"\")\n  \n  let noLettersSum = 0\n  \n  for (let i = 0; i < noLetters.length; i++){\n    \n      let x = parseInt(noLetters[i])\n      noLettersSum += x\n    }\n    \n  return noLettersSum\n    \n  }\n","xyzThere-code":"function xyzThere(str){\n  \n  if (str.slice(0,3) === \"xyz\"){\n    return true\n  }\n  \n  for (let i = 0; i < str.length ; i++){\n    \n    let x = str.slice(i, i +4)\n    \n    if ((x.slice(0,1) != \".\") && (x.slice(1,4) === \"xyz\")){\n    \n      return true\n    }\n  }\n  \n  return false \n}","makeAbba-code":"function makeAbba(a, b){\n  return `${a}${b}${b}${a}`\n}","altPairs":"true","lastDigit":"true","getSandwich":"true","arrayFront9-code":"function arrayFront9(nums){\n  if (nums.length <= 4){\n   \n    if (nums.includes(9,0) === true){\n      return true \n    }\n  }\n  \n  if (nums.length > 4){\n    let x = nums.slice(0,4)\n    if x.includes(9,0){\n      return true\n    }\n  }\n \n  return false \n  \n}","sleepIn-code":"function sleepIn(weekday, vacation){\n    if (weekday && vacation !== true){\n      return false\n    }else{\n      return true\n    }\n  } \n\n\n","maxBlock":"true","makeTags":"true","endOther":"true","altPairs-code":"function altPairs(str){\n  let new_str = \"\"\n  \n  if (str.length < 3){\n    return str\n  }\n  \n  if (str.legnth <= 3){\n    \n    new_str = str.slice(0,2)\n    return new_str\n    \n    }\n  \n  \n  \n  for (let i = 0; i <= str.length - 1; i +=4){\n  new_str += str[i] \n  \n  let x = i + 1\n  \n  if (x < (str.length)){\n    \n    new_str += str[i + 1]\n    \n    }else{\n        return new_str\n      }\n  \n  }\n  \n  \n  return new_str\n}\n","inOrder":"true","extraEnd":"true","teenSum-code":"function teenSum(a, b){\n\n   if ((a >= 13) && (a <= 19)){\n   \n     return 19\n     \n   }else if ((b >= 13) && (b <= 19)){\n   \n     return 19\n     \n   }else{\n     return a + b\n   }\n  \n  \n  \n}","frontAgain":"true"}